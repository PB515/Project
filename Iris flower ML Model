import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfTransformer
from sklearn.metrics import accuracy_score
from sklearn.tree import DecisionTreeClassifier
iris_data=pd.read_csv('/content/Iris.csv')
iris_data.head()
iris_data.shape
iris_data.describe()
iris_data.Species.unique()
iris_data.Species.value_counts()
x=iris_data.drop('Species',axis=1)
y=iris_data['Species']
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.1,stratify=y,random_state=1)
model=DecisionTreeClassifier()
model.fit(x_train,y_train)
x_train_prediction=model.predict(x_train)
training_data_accuracy=accuracy_score(x_train_prediction,y_train)
print(training_data_accuracy)
x_test_prediction=model.predict(x_test)
training_data_accuracy=accuracy_score(x_test_prediction,y_test)
print(training_data_accuracy)
new_data = [[5.1, 3.5, 1.4, 0.2,0.5], [6.2, 2.8, 4.8, 1.8,0.5]]
new_predictions = model.predict(new_data)
print("Predictions:", new_predictions)
